# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ANNOTATION_1: ${env.ANNOTATION_1}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: python3 print.py

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project
          exit 0
#-------------
  ai:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get dir context
        id: getdir
        run:
          echo "dir_context=$(find . -path ./.git -prune -o -print | base64 | tr
          '\n' ' ')" >> $GITHUB_ENV

      - name: Run Bender (if failure)
        uses: ahelal/bender-action@main
        with:
          mode: 'job'
          gh-token: ${{ secrets.GH_TOKEN }} # if needed
          az-openai-endpoint: ${{vars.OA_ENDPOINT}}
          az-openai-deployment: ${{secrets.OA_DEPLOYMENT}}
          az-openai-key: ${{secrets.OA_KEY}}
          #dir-context: ${{ env.dir_context }}
